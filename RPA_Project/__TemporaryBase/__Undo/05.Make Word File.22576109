<?xml version="1.0" encoding="utf-8" standalone="yes"?><TASKSCRIPT PACING_TIME="0" EVENT_GAP_TIME="0"><TASKGROUP TYPE="TRANSACTION"><EVENTLISTS KEY="bcfc0291-c10b-45a7-a9e6-775b5038538e" NAME="Make SensorCode Dir And Copy File"><EVENT KEY="073c23da-92b3-4f10-917d-616f9d765d84" EVENT_NAME="SensorCode 디렉토리 생성" EVENT_TYPE="11" STOPIFERR="1" SCRIPT_CODE="using System;&#xD;&#xA;using System.IO;&#xD;&#xA;using System.Collections;&#xD;&#xA;using System.Collections.Generic;&#xD;&#xA;using System.Data;&#xD;&#xA;using System.Text;&#xD;&#xA;&#xD;&#xA;public partial class CustomScript&#xD;&#xA;{&#xD;&#xA;	public void Execute_Code()&#xD;&#xA;	{&#xD;&#xA;		string folderPath = &quot;C:/RPA_Generator/Report/Sensor Code/&quot; + sensorCode;&#xD;&#xA;		DirectoryInfo di = new DirectoryInfo(folderPath);&#xD;&#xA;		DirectoryInfo diDaily = new DirectoryInfo(folderPath+&quot;/&quot;+&quot;Daily Report&quot;);&#xD;&#xA;		DirectoryInfo diEmerg = new DirectoryInfo(folderPath+&quot;/&quot;+&quot;Emergency Report&quot;);&#xD;&#xA;		&#xD;&#xA;		// 폴더가 존재하지 않는 경우&#xD;&#xA;		if(di.Exists==false)&#xD;&#xA;		{	&#xD;&#xA;			di.Create();&#xD;&#xA;			diDaily.Create();&#xD;&#xA;			diEmerg.Create();&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;}&#xD;&#xA;" /><EVENT KEY="7c506e4a-300c-439a-9449-e23b31c2995c" EVENT_NAME="파일 복사" EVENT_TYPE="11" STOPIFERR="1" SCRIPT_CODE="using System;&#xD;&#xA;using System.IO;&#xD;&#xA;using System.Collections;&#xD;&#xA;using System.Collections.Generic;&#xD;&#xA;using System.Data;&#xD;&#xA;using System.Text;&#xD;&#xA;&#xD;&#xA;public partial class CustomScript&#xD;&#xA;{&#xD;&#xA;	public void Execute_Code()&#xD;&#xA;	{	&#xD;&#xA;		string srcFilePath=@&quot;C:/RPA_Generator/Report/Report Format/DailyReport_Src.docx&quot;;&#xD;&#xA;		string dstFilePath = @&quot;C:/RPA_Generator/Report/Sensor Code/&quot; + sensorCode + &quot;/Daily Report/Daily Report_&quot; + dateTime + &quot;.docx&quot;;&#xD;&#xA;&#xD;&#xA;		dstDocxFilePath = &quot;C:/RPA_Generator/Report/Sensor Code/&quot; + sensorCode + &quot;/Daily Report/Daily Report_&quot; + dateTime + &quot;.docx&quot;;&#xD;&#xA;		&#xD;&#xA;		// 기존 파일 존재하는 경우, 삭제한다&#xD;&#xA;		FileInfo fileDel = new FileInfo(@dstFilePath);&#xD;&#xA;		if(fileDel.Exists==true) {&#xD;&#xA;  			fileDel.Delete();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// 파일명 변경&#xD;&#xA;		System.IO.FileInfo fi = new System.IO.FileInfo(@srcFilePath);&#xD;&#xA;		fi.CopyTo(@dstFilePath,false);&#xD;&#xA;&#xD;&#xA;	}&#xD;&#xA;}&#xD;&#xA;" /></EVENTLISTS></TASKGROUP><TASKGROUP TYPE="CUSTOM" /><TASKGROUP TYPE="EXCEPTION" /><TASKGROUP TYPE="FINALLY" /><VARIABLES><VARIABLE NAME="dateTime" TYPE="string" DEFAULT="" DESCRIPTION="날짜 시간" /><VARIABLE NAME="dateTimeReport" TYPE="string" DEFAULT="" DESCRIPTION="보고서 형식 날짜 시간" /><VARIABLE NAME="sensorCode" TYPE="string" DEFAULT="" DESCRIPTION="SensorCode 명" /><VARIABLE NAME="sensorIndex" TYPE="int" DEFAULT="" DESCRIPTION="엑셀 파일에서 순차적으로 센서에 접근" /><VARIABLE NAME="dstDocxFilePath" TYPE="string" DEFAULT="" DESCRIPTION="" /></VARIABLES></TASKSCRIPT>