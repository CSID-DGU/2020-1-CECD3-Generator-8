<?xml version="1.0" encoding="utf-8" standalone="yes"?><TASKSCRIPT PACING_TIME="0" EVENT_GAP_TIME="0"><TASKGROUP TYPE="TRANSACTION"><EVENTLISTS KEY="05a198dc-37e4-4a3c-ae53-d1b2b0f96de3" NAME="Read Sensor Code"><EVENT KEY="8c2d980c-4548-48b9-a5eb-efeca7b8e63e" EVENT_NAME="SensorCode를 읽어서 Clipboard에 저장" EVENT_TYPE="80" EXCEL_SCRIPT="using System;&#xD;&#xA;using System.IO;&#xD;&#xA;using System.Collections;&#xD;&#xA;using System.Collections.Generic;&#xD;&#xA;using System.Data;&#xD;&#xA;using System.Text;&#xD;&#xA;using SymationModules.ExcelControl;&#xD;&#xA;&#xD;&#xA;public partial class CustomScript&#xD;&#xA;{&#xD;&#xA;	public void Excel_Script(ExcelControlClass xl)&#xD;&#xA;	{&#xD;&#xA;		xl.SetExcelID = &quot;monitoringCopyCSV&quot;;&#xD;&#xA;		xl.ExcelAppExecute(xl.SetExcelID, true);&#xD;&#xA;		&#xD;&#xA;		xl.SetWorkbookID = xl.ExcelFileOpen(xl.SetExcelID, @&quot;C:/RPA_Generator/Report/Monitoring CSV File/monitoring_&quot; + dateTime + &quot;.csv&quot;);&#xD;&#xA;		&#xD;&#xA;		xl.ActiveSheet(1);&#xD;&#xA;		&#xD;&#xA;		string address = &quot;B&quot; + sensorIndex.ToString();&#xD;&#xA;		sensorCode = xl.GetOneCellValue(address);&#xD;&#xA;		sensorIndex++;&#xD;&#xA;	}&#xD;&#xA;}&#xD;&#xA;" /></EVENTLISTS></TASKGROUP><TASKGROUP TYPE="CUSTOM" /><TASKGROUP TYPE="EXCEPTION" /><TASKGROUP TYPE="FINALLY" /><VARIABLES><VARIABLE NAME="dateTime" TYPE="string" DEFAULT="" DESCRIPTION="" /><VARIABLE NAME="sensorIndex" TYPE="int" DEFAULT="" DESCRIPTION="" /><VARIABLE NAME="sensorCode" TYPE="string" DEFAULT="" DESCRIPTION="" /></VARIABLES></TASKSCRIPT>